-- Mongo DB schema --
recentchange
{
    article: string, index1
    gathered_at: datetime, index0(DESC)
    cmd: string ("modify", "delete", "attach")
    author: string
    comment: string
    time_magic: string
    edit_num: Nullable int
    diff: JSON>
        list of {
            area: string
            content: string, in which "\" is escaped, added stub is represented as "\+"<stub>"+\", removed stub as "\-"<stub>"-\", and return-deliminater is "\n". In other hand, basic html escapes are restored (e.g &nbsp -> " ")
        }
}



last_recentchange
{
    article: string, index0
    gathtered_at: datetime
    time_magic: string
    original_data: reference of recent_change
}

anon_user
{
    anon_id: string, index, unique
    created_at: datetime
}

assoc_anon_sub
{
    anon_id: Ref("anon_user"), paired_index
    article: string, paired_index1
}

gcm_push
{
    # the pair is unique
    anon_id: Ref("anon_user"), index1
    registration_id: string, index0
    registered_at: datetime
}


-- Redis DB Schema --
"rigveda-keywords": string sorted-set
"rigveda-recentchange-cache": Hash{
    gathered_at AS rank
    data IS  <article_name encoded in UTF-8> + "\n" + <recentchange JSON>
} # LRU-style cache


-- PUBSUB topics --
"rigveda-article-push-{article}:
    Timing - when {article} just has been changed
    Content - JSON list of rigveda logs


-- DB abstraction layer --
# TODO


-- Crawling Task --
old = collections()
Task (periodically called)
    new = collections()
    fresh_logs = compare(old, new)
    publish to <channel> (buffered queue)
    old = new
